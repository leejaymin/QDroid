/*$$$ <filter id="temperatureShader" label="Temperature" category="adjustment" vartype="intensity">	<var varname="intensity" label="Intensity" numFactor="100" type="number" min="-1" max="1" default="0" /></filter>$$$*/precision highp float;uniform sampler2D tt_uniform_maintexture;uniform float intensity;varying vec2 mainTexCoord;void main(){    vec4 dst;    vec4 rgbaColor;    vec4 yiqaColor;    vec4 yiqaTempColor;    vec4 rgbaTempColor;    float factor;    float negFactor;    float posFactor;  	const vec4 coolRGBColor = vec4(0.05,0.43,1.0,1.0);    const vec4 warmRGBColor = vec4(0.93,0.54,0.05,1.0);    const mat4 YIQMatrix = mat4(        0.299,  0.596,  0.212, 0.000,        0.587, -0.275, -0.523, 0.000,        0.114, -0.321,  0.311, 0.000,        0.000,  0.000,  0.000, 1.000    );    const mat4 inverseYIQ = mat4(        1.0,    1.0,    1.0,    0.0,        0.956, -0.272, -1.10,  0.0,        0.621, -0.647,  1.70,   0.0,        0.0,    0.0,    0.0,    1.0    );    negFactor = sign(max(-intensity,0.0));    posFactor = step(0.0,intensity);        rgbaColor = texture2D(tt_uniform_maintexture, mainTexCoord.xy);		SHIFTCOMPS(rgbaColor)	    yiqaColor = YIQMatrix * rgbaColor;            yiqaTempColor = coolRGBColor*negFactor + warmRGBColor*posFactor; 	factor = abs(intensity);    yiqaTempColor = YIQMatrix * yiqaTempColor;      yiqaColor.y = yiqaTempColor.y;     yiqaColor.z = yiqaTempColor.z;    rgbaTempColor = inverseYIQ * yiqaColor;    dst.xyz = mix(rgbaColor.xyz,rgbaTempColor.xyz,factor*0.25);	dst.w = rgbaColor.w;		SHIFTCOMPS(dst)		gl_FragColor.rgb = min(dst.rgb,dst.a);	gl_FragColor.a = dst.a;}
